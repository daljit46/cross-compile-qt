name: Build Qt 6
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCCACHE_GHA_ENABLED: true

    steps:
    - name: Checkout 
      uses: actions/checkout@v4

    - name: Install build deps
      run: sudo apt install make cmake build-essential libclang-dev clang ninja-build gcc git bison python3 gperf pkg-config libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev

    - name: Install Clang 17
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17

    - name: Install cross-compiling tools
      run: >
        sudo apt install crossbuild-essential-arm64 

    - name: Install Qt on host
      uses: jurplel/install-qt-action@v3
      with:
        host: linux
        version: 6.5.3
        arch: gcc_64
        dir: ${{ github.workspace }}/qt
        set-env: true
        modules: "qt5compat qtshadertools qtimageformats"

    - name: Restore cache files
      id: qtcache
      uses: actions/cache/restore@v3
      with:
        path: ~/.qtinstall
        key: ${{ runner.os }}-qtinstall-${{ matrix.sanitizer }}
        restore-keys: |
          ${{ runner.os }}-qtinstall-${{ matrix.sanitizer }}

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Setup Qt sources
      if: steps.qtcache.outputs.cache-hit != 'true'
      run: |
        git clone git://code.qt.io/qt/qt5.git qt6
        cd qt6 && git checkout 6.5.3
        ./init-repository --module-subset=qtbase,qtdeclarative,qtshadertools,qtsvg,qt5compat
        ./configure -list-features

    - name: List Qt dirs again
      run: |
        echo $Qt6_DIR
        ls $Qt6_DIR

    - name: Configure Qt
      if: steps.qtcache.outputs.cache-hit != 'true'
      run: >
        cd qt6 &&
        cmake
        -B build
        -G Ninja
        -D CMAKE_BUILD_TYPE=Release
        -D CMAKE_C_COMPILER=clang-17
        -D CMAKE_CXX_COMPILER=clang++-17
        -D CMAKE_TOOLCHAIN_FILE=../toolchain.cmake
        -D LLVM_TARGETS_TO_BUILD="ARM"
        -D CMAKE_C_COMPILER_LAUNCHER=sccache
        -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
        -D QT_BUILD_TESTS=OFF
        -D QT_BUILD_EXAMPLES=OFF
        -D QT_BUILD_SUBMODULES="qtbase;qtdeclarative;qtshadertools;qtsvg;qt5compat"
        -D QT_HOST_PATH=$Qt6_DIR

    - name: Build Qt
      run: >
        cmake --build qt6/build --verbose

    - name: Install Qt
      run: >
        cmake --install qt6/build --prefix ~/.qtinstall

    - name: Save cache files
      uses: actions/cache/save@v3
      with:
        path: ~/.qtinstall
        key: ${{ runner.os }}-qtinstall
